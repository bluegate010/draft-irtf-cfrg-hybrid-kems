



Crypto Forum                                                 D. Connolly
Internet-Draft                                                 SandboxAQ
Intended status: Informational                           22 October 2024
Expires: 25 April 2025


            Generic Hybrid PQ/T Key Encapsulation Mechanisms
               draft-irtf-cfrg-generic-hybrid-kems-latest

Abstract

   This document defines generic techniques to achive hybrid PQ-T key
   encapsulation mechanisms (KEMs) from post-quantum and traditional
   component algorithms that meet specified security properties.
   Concrete instatiations of techniques are located in another document.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Discussion of this document takes place on the Crypto Forum Research
   Group mailing list (cfrg@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/cfrg.

   Source for this draft and an issue tracker can be found at
   https://github.com/cfrg/draft-irtf-cfrg-pq1.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 25 April 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.

Table of Contents

   1.  Introduction
     1.1.  Motivation
     1.2.  Design goals
       1.2.1.  Non-iteractive
       1.2.2.  Not authenticated
     1.3.  Design Non-Goals
   2.  Conventions and Definitions
   3.  Conventions and Definitions
   4.  Hybrid KEM Security Properties
     4.1.  IND-CCA security
     4.2.  LEAK-BIND-K-PK security
     4.3.  LEAK-BIND-K-CT security
   5.  Hybrid KEM Construction Techniques
     5.1.  KDF as a secure PRF
     5.2.  IND-CCA-secure PQ KEM
     5.3.  'Kitchen Sink' construction:
     5.4.  'X-Wing' construction
   6.  Hybrid KEM Instatiations
   7.  Security Considerations
   8.  IANA Considerations
   9.  References
     9.1.  Normative References
     9.2.  Informative References
   Acknowledgments
   Author's Address

1.  Introduction

1.1.  Motivation

   There are many choices that can be made when specifying a hybrid KEM:
   the constituent KEMs; their security levels; the combiner; and the
   hash within, to name but a few.  Having too many similar options are
   a burden to the ecosystem.

   The aim of this document is provide a small set of techniques for
   constructing hybrid KEMs designed to achieve specific security
   properties given conforming component algorithms, that should be
   suitable for the vast majority of use cases.

1.2.  Design goals

   *  Identify which KEM security properties are IETF-relevant, and
      provide a terse overview of those security properties (eg.  IND-
      CCA, LEAK-BIND-K-PK, HON-BIND-K-CT, etc), as well as security
      properties unique to hybrid KEMs (component key material reuse
      between hybrid and non-hybrid uses or between multiple hybrids,
      one component is malicious while the other is honest, etc) with
      reference to literature, and put into context with real-world
      attacks.  From that, give guidance on a sensible baseline.

   *  Provide a terse overview of well-reviewed techniques that are
      options to safely produce the concrete combinations in (C), and
      which security properties are achieved given those of the
      constituents.

   *  Provide an initial number of explicit PQ/T hybrid KEMs using
      techniques from (B) that reach the baseline set in (A), in a
      separate document, and should include:

       (I)  a hybrid of P-256 and ML-KEM-768,
       (II)  a hybrid of X25519 and ML-KEM-768, and,
       (III) a hybrid of P-384 and ML-KEM-1024.

   These hybrids should be accompanied by pseudocode and test vectors.

   This list includes two options at the ~128-bit security level (due to
   current implementation/deployment trends) and one at a higher level.

1.2.1.  Non-iteractive

   These KEMs are a non-interactive means to establish a shared secret.
   Using KEMs in place of Diffie-Hellman key exchange can be done in
   some settings but not all.

1.2.2.  Not authenticated

   These KEMs are not _authenticated_.

1.3.  Design Non-Goals

   There is demand for other hybrid variants that either use different
   primitives (RSA, NTRU, Classic McEliece, FrodoKEM), parameters, or
   that use a combiner optimized for a specific use case.  Other use
   cases could be covered in subsequent documents and not included here.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Conventions and Definitions

   This document is consistent with all terminology defined in
   [I-D.driscoll-pqt-hybrid-terminology].

   The following terms are used throughout this document to describe the
   operations, roles, and behaviors of HPKE:

   *  concat(x0, ..., xN): returns the concatenation of byte strings.
      concat(0x01, 0x0203, 0x040506) = 0x010203040506.

   *  random(n): return a pseudorandom byte string of length n bytes
      produced by a cryptographically-secure random number generator.

4.  Hybrid KEM Security Properties

   Hybrid KEM constructions ideally provide at least:

4.1.  IND-CCA security

   Also known as IND-CCA1 security for general public key encryption,
   for KEMs that encapsulate a new random 'message' each time,

4.2.  LEAK-BIND-K-PK security

4.3.  LEAK-BIND-K-CT security

   The shared secret

5.  Hybrid KEM Construction Techniques

   Requirements:

5.1.  KDF as a secure PRF

5.2.  IND-CCA-secure PQ KEM

5.3.  'Kitchen Sink' construction:

   Ingredients:

   *  KDF F

   *  label

   *  PQ-CT

   *  PQ-PK

   *  PQ-SS

   *  T-PK

   *  T-CT

   *  T-SS

   def SharedSecret():
       return F(concat(PQ_SS, T_SS, PQ_CT, PQ_PK, T_CT, T_PK, label))

   Label varies per combos such that the label will vary as the lengths
   and other properties of the component algorithms vary.  Otherwise
   we'd have to hash the inputs to fixed lengths or encode lengths into
   the input.

5.4.  'X-Wing' construction

   Inspired by [XWING] which leverages the security properties of a KEM
   like ML-KEM to elide other public data from the KDF input.

   def SharedSecret():
       return F(concat(label, T_SS, PQ_SS, T_CT, T_PK))

   Relies on PQ KEM having LEAK-BIND-K-CT and LEAK-BIND-K-PK security,
   which is related to the collision-freeness of the underlying PKE
   scheme of a FO-transform KEM like ML-KEM.

6.  Hybrid KEM Instatiations

   See the other document.

7.  Security Considerations

   IND-CCA, LEAK-BIND-K-PK, etc, as well as security properties unique
   to hybrid KEMs (component key material reuse between hybrid and non-
   hybrid uses or between multiple hybrids, one component is malicious
   while the other is honest, etc)

8.  IANA Considerations

   This document has no IANA actions.

9.  References

9.1.  Normative References

   [FIPS203]  "Module-Lattice-Based Key-Encapsulation Mechanism
              Standard", National Institute of Standards and Technology,
              DOI 10.6028/nist.fips.203, August 2024,
              <https://doi.org/10.6028/nist.fips.203>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

9.2.  Informative References

   [I-D.driscoll-pqt-hybrid-terminology]
              D, F., "Terminology for Post-Quantum Traditional Hybrid
              Schemes", Work in Progress, Internet-Draft, draft-
              driscoll-pqt-hybrid-terminology-02, 7 March 2023,
              <https://datatracker.ietf.org/doc/html/draft-driscoll-pqt-
              hybrid-terminology-02>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Deirdre Connolly
   SandboxAQ
   Email: durumcrustulum@gmail.com
